{A69 - Fraction}
{A23}

equals(x:Fraction, y:Fraction):Bool
[* Gibt zurück, ob die Brüche <x> und <y> gleich sind.
** Fehler, falls einer der Nenner 0 ist. *]
::= [normX --> x.normalizeFraction,
		 normY --> y.normalizeFraction]
normX.enum.=(normY.enum).&&(normX.denom.=(normY.denom));

<<< <(x:Fraction,y:Fraction):Bool
[* Gibt zurück, ob der Bruch <x> (echt) kleiner als <y> ist.
** Fehler, falls einer der Nenner 0 ist. *]
::= [normX --> x.normalizeFraction,
		 normY --> y.normalizeFraction]
		normX.enum.*(normY.denom).<(normY.enum.*(normX.denom));

<<< <=(x:Fraction,y:Fraction):Bool
[* Gibt zurück, ob der Bruch <x> kleiner gleich <y> ist.
** Fehler, falls einer der Nenner 0 ist. *]
::= x.equals(y).||(x.<(y));

<<< >(x:Fraction,y:Fraction):Bool
[* Gibt zurück, ob der Bruch <x> (echt) größer als <y> ist.
** Fehler, falls einer der Nenner 0 ist. *]
::= x.<=(y).!;

<<< >=(x:Fraction,y:Fraction):Bool
[* Gibt zurück, ob der Bruch <x> größer gleich <y> ist.
** Fehler, falls einer der Nenner 0 ist. *]
::= x.<(y).!;